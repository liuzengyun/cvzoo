{"meta":{"title":"顺毛师之家","subtitle":"刘增运个人博客","description":"顺毛师之家, 刘增运个人博客","author":"lzy","url":"http://www.cvzoo.cn","root":"/"},"pages":[{"title":"","date":"2024-12-16T07:41:49.694Z","updated":"2024-12-14T15:58:09.000Z","comments":true,"path":"me/index.html","permalink":"http://www.cvzoo.cn/me/index.html","excerpt":"","text":"About Me 学生 中国石油大学(华东)—通信工程18级—本科 天津大学—电子信息22级—硕士 天津大学—信息与通信工程24级—博士生 HAM callsign: BH3FUS 通联日志 GitHub：liuzengyun 微博：@刘增运 Email：i@cvzoo.cn 如果您想了解更多，请点击这里查看我的在线简历（可能维护不及时（不是可能，已经不维护了，截止2022.09））。 About Site 本站原域名：upclzy.com，从upc毕业了再用不太合适了，于是换了个新的。 关于新域名：cvzoo.cn cv：Computer Vision or Ctrl C + Ctrl V zoo：an area in which animals, especially wild animals, are kept so that people can go and look at them or study them cn：买不起.com了 2024.12 临近服务器到期，从WordPress换到Hexo了，临时先部署在GitHub，后面再看要不要放到阿里云OSS托管。 2022.06 换域名 cvzoo.cn。 2022.02 迁移到腾讯云轻量应用服务器了。 2020.03 建站了，用的WordPress，部署在阿里云ECS，域名 zyliu.xyz 和 upclzy.com 。"},{"title":"","date":"2024-12-26T11:21:20.957Z","updated":"2024-12-26T11:21:18.394Z","comments":false,"path":"pyq/index.html","permalink":"http://www.cvzoo.cn/pyq/index.html","excerpt":"","text":""},{"title":"","date":"2024-12-16T07:41:49.700Z","updated":"2024-12-14T15:45:53.049Z","comments":true,"path":"friends/index.html","permalink":"http://www.cvzoo.cn/friends/index.html","excerpt":"","text":"My Friends John's Blog秦国识积一枚AI心华东设计之美阿加ErinYuhao的小世界 是这样的，我换主题之后一直想把原来的友链直接贴过来，结果访问了一下，发现大部分身边的朋友都弃用博客了，导致站点要么404要么CDN挂了要么打开没内容。 而且我也没想好应该怎么排版友链，~~~~所以这个页面先搁置吧…….. 2022.3.23更新： 我终于终于想起来要写一下友情链接这个页面了！而且这次没用以前的自定义HTML了，好好利用一下WordPress的link功能吧，不过PHP这种东西怎么感觉跟jsp一样，真的难用…… 参考：https://icss.me/3300.html 找了找以前的友链，就一两个还能打开了，能坚持下来太不容易啦。 最后！欢迎来到我的博客，欢迎在评论区按照如下格式交换友链！！ 网站地址：http://www.cvzoo.cn网站名称：顺毛师之家网站图标：http://www.upclzy.com/wp-content/uploads/2020/03/cropped-logo-1-32x32.jpg 2024.12更新： 服务器快到期了，换到Hexo了哈哈哈","author":null}],"posts":[{"title":"EDA实验二 功能可调综合计时器","slug":"20201121-EDA实验2","date":"2020-11-20T16:08:24.000Z","updated":"2024-12-14T15:37:31.949Z","comments":true,"path":"2020/20201121-EDA实验2/","permalink":"http://www.cvzoo.cn/2020/20201121-EDA%E5%AE%9E%E9%AA%8C2/","excerpt":"","text":"题目设计一个可调的综合计时器。具体功能： 1、显示小时、分、秒，提供置零功能。显示在七段管或LCD屏幕上，可以考虑24&#x2F;12小时模式切换功能。 2、能够对秒、分、小时进行分别修改，可以两位数整体修改或每位独立修改 3、整点报时功能，整点可以显示一定形式的LED来表示。 4、闹钟功能，设定特定时间，到时间以特定LED显示来显示闹钟。注意闹钟持续时间，也可以参考懒人闹钟模式。 代码module lab2(hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7,key,ledr,ledg,clk_50); input clk_50;//50MHz时钟 input[3:0] key;//四个按键 output reg[6:0] hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7;//七个数码管输出 output reg[17:0] ledr=18&#x27;b000000000000000000;//红灯，初始化为灭 output reg[8:0] ledg=9&#x27;b000000000;//绿灯，初始化为灭 reg[8:0] ztimer=0,ntimer=0;//计时器，控制灯亮的时间 reg[9:0] hour=0,minute=0,second=0,nhour=11,nminute=11,nsecond=11,th=0,tm=0,ts=0;//计时器和闹钟的时分秒 reg[5:0] state=0,zstate=0,nstate=0,temp=0,t1,t2,t3,t4,t5,t6;//1、切换时钟与闹钟 2、切换时钟调整时的时分秒 3、切换闹钟调整时的时分秒 divclk dc(clk_50,clk1);// always@(negedge key[2])//改state begin state=(state+1)%2; end always@(negedge key[1])//改zstate和nstate begin temp=state; if(temp==0)//如果在计时状态 begin zstate=(zstate+1)%4; end else//闹钟状态 begin nstate=(nstate+1)%4; end end always@(negedge key[0])//增加 begin t4=state; t5=zstate; t6=nstate; th=hour; tm=minute; ts=second; if(t4==0)//如果在计时状态 begin if(t5==1) begin if(th==23) th=0; else th=th+1; end if(t5==2) begin if(tm==59) tm=0; else tm=tm+1; end if(t5==3) begin if(ts==59) ts=0; else ts=ts+1; end end else//闹钟状态 begin if(t6==1) begin if(nhour==23) nhour=0; else nhour=nhour+1; end if(t6==2) begin if(nminute==59) nminute=0; else nminute=nminute+1; end if(t6==3) begin if(nsecond==59) nsecond=0; else nsecond=nsecond+1; end end end always@(posedge clk1,negedge key[3]) begin t1=state; t2=zstate; t3=nstate; if(!key[3])//按下置零 begin hour=0; minute=0; second=0; show(hour/10,hex7); show(hour%10,hex6); show(minute/10,hex5); show(minute%10,hex4); show(second/10,hex3); show(second%10,hex2); show(10,hex1); show(zstate+12,hex0); end else//clk1来了 begin if(t1==0) begin if(t2==0) begin //下面是正常的计时 if(second==59) begin second=0; if(minute==59) begin minute=0; if(hour==23) hour=0; else hour=hour+1; end else minute=minute+1; end else begin second=second+1; end show(hour/10,hex7); show(hour%10,hex6); show(minute/10,hex5); show(minute%10,hex4); show(second/10,hex3); show(second%10,hex2); show(10,hex1); show(12,hex0); //以上是正常的计时,以下是报时和闹钟 if(minute==0&amp;&amp;second==0) ztimer=59; else ztimer=0; if(hour==nhour&amp;&amp;minute==nminute&amp;&amp;second==nsecond) ntimer=59; else ntimer=0; if(ztimer&gt;0) begin ledr=18&#x27;b111111111111111111;//亮红灯 ztimer=ztimer-1; end else ledr=18&#x27;b000000000000000000;//关红灯 if(ntimer&gt;0) begin ledg=9&#x27;b111111111;//亮绿灯 ntimer=ntimer-1; end else ledg=9&#x27;b000000000; end else if(t2==1) begin hour=th; show(hour/10,hex7); show(hour%10,hex6); show(minute/10,hex5); show(minute%10,hex4); show(second/10,hex3); show(second%10,hex2); show(10,hex1); show(t2+12,hex0); end else if(t2==2) begin minute=tm; show(hour/10,hex7); show(hour%10,hex6); show(minute/10,hex5); show(minute%10,hex4); show(second/10,hex3); show(second%10,hex2); show(10,hex1); show(t2+12,hex0); end else if(t2==3) begin second=ts; show(hour/10,hex7); show(hour%10,hex6); show(minute/10,hex5); show(minute%10,hex4); show(second/10,hex3); show(second%10,hex2); show(10,hex1); show(t2+12,hex0); end end else if(t1==1) begin show(nhour/10,hex7); show(nhour%10,hex6); show(nminute/10,hex5); show(nminute%10,hex4); show(nsecond/10,hex3); show(nsecond%10,hex2); show(11,hex1); show(nstate+12,hex0); end end end task show; input reg[3:0] result; output reg[6:0] out; if(result==0) out=7&#x27;b1000000; // 显示0 else if(result==1) out=7&#x27;b1111001; // 显示1 else if(result==2) out=7&#x27;b0100100; // 显示2 else if(result==3) out=7&#x27;b0110000; // 显示3 else if(result==4) out=7&#x27;b0011001; // 显示4 else if(result==5) out=7&#x27;b0010010; // 显示5 else if(result==6) out=7&#x27;b0000010; // 显示6 else if(result==7) out=7&#x27;b1111000; // 显示7 else if(result==8) out=7&#x27;b0000000; // 显示8 else if(result==9) out=7&#x27;b0011000; // 显示9 else if(result==10)out=7&#x27;b0111111; // 显示- else if(result==11)out=7&#x27;b1110110; // 显示= else if(result==12)out=7&#x27;b1111111; // 显示“ ” else if(result==13)out=7&#x27;b0001001; // 显示H else if(result==14)out=7&#x27;b0001110; // 显示F else if(result==15)out=7&#x27;b0010010; // 显示S else out=7&#x27;b1111111; // 不显示 endtaskendmodulemodule divclk(clk_50,clk1); input clk_50; // clk50：输入50MHz信号；reset：复位信号 output reg clk1=1; // clk1：新产生的1Hz信号 integer i=0; always@(posedge clk_50) begin if(i==25000000) begin i=0; clk1=~clk1; end else i=i+1; end endmodule 效果 ps：1、使用倒数第二个数码管表示目前的工作模式，“-”表示工作在计时器模式，“&#x3D;”表示工作在闹钟调整模式。 2、使用倒数第一个数码管表示目前正在修改的位数，“H”表示修改hour，“F”表示修改minute，“S”表示修改second。","categories":[],"tags":[],"author":"lzy"},{"title":"EDA实验一 指令运算单元设计——第一次用FPGA开发板","slug":"20201115-EDA实验1","date":"2020-11-14T16:08:24.000Z","updated":"2020-11-14T16:08:24.000Z","comments":true,"path":"2020/20201115-EDA实验1/","permalink":"http://www.cvzoo.cn/2020/20201115-EDA%E5%AE%9E%E9%AA%8C1/","excerpt":"","text":"题目设计一个指令运算单元ALU，完成功能如下。（1）操作类型1：将操作数1作为一个无符号二进制数，在七段管以十进制显示二进制序列等效值。（2）操作类型2：实现操作数3、操作数4之间相加、减、乘的操作，在七段管以十&#x2F;十六进制进制显示操作数和结果。操作数3和4为BCD码表示的2位十进制数（表示的值为00-99）。 实现代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142module lab1(sw,hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7); input[17:0] sw; output[6:0] hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7; reg[4:0] h7,h6,h5,h4,h3,h2,h1,h0; reg[15:0] o1,o2,s; reg[17:0] sw0; always@(*) begin if(sw[3:0]&gt;9) sw0[3:0]=9; else sw0[3:0]=sw[3:0]; if(sw[7:4]&gt;9) sw0[7:4]=9; else sw0[7:4]=sw[7:4]; if(sw[11:8]&gt;9) sw0[11:8]=9; else sw0[11:8]=sw[11:8]; if(sw[15:12]&gt;9) sw0[15:12]=9; else sw0[15:12]=sw[15:12]; if(sw[17:16]==0) begin h7=16; h6=16; h5=16; h0=sw[15:0]%10; h1=sw[15:0]/10%10; h2=sw[15:0]/100%10; h3=sw[15:0]/1000%10; h4=sw[15:0]/10000; show(h0,hex0); show(h1,hex1); show(h2,hex2); show(h3,hex3); show(h4,hex4); end else if(sw[17:16]==1) begin o1=sw0[15:12]*10+sw0[11:8]; o2=sw0[7:4]*10+sw0[3:0]; s=o1+o2; h7=sw0[15:12]; h6=sw0[11:8]; h5=sw0[7:4]; h0=s%10; h1=s/10%10; h2=s/100; h3=16; h4=sw0[3:0]; show(h0,hex0); show(h1,hex1); show(h2,hex2); show(h3,hex3); show(h4,hex4); show(h5,hex5); show(h6,hex6); show(h7,hex7); end else if(sw[17:16]==2) begin o1=sw0[15:12]*10+sw0[11:8]; o2=sw0[7:4]*10+sw0[3:0]; s=o1*o2; h7=sw0[15:12]; h6=sw0[11:8]; h5=sw0[7:4]; h0=s%10; h1=s/10%10; h2=s/100%10; h3=s/1000%10; h4=sw0[3:0]; show(h0,hex0); show(h1,hex1); show(h2,hex2); show(h3,hex3); show(h4,hex4); show(h5,hex5); show(h6,hex6); show(h7,hex7); end else if(sw[17:16]==3) begin o1=sw0[15:12]*10+sw0[11:8]; o2=sw0[7:4]*10+sw0[3:0]; if(o1&gt;=o2) begin s=o1-o2; h7=sw0[15:12]; h6=sw0[11:8]; h5=sw0[7:4]; h0=s%10; h1=s/10%10; h2=s/100%10; h3=16; h4=sw0[3:0]; show(h0,hex0); show(h1,hex1); show(h2,hex2); show(h3,hex3); show(h4,hex4); show(h5,hex5); show(h6,hex6); show(h7,hex7); end else begin s=o2-o1; h7=sw0[15:12]; h6=sw0[11:8]; h5=sw0[7:4]; h0=s%10; h1=s/10%10; h2=s/100%10; h3=10; h4=sw0[3:0]; show(h0,hex0); show(h1,hex1); show(h2,hex2); show(h3,hex3); show(h4,hex4); show(h5,hex5); show(h6,hex6); show(h7,hex7); end end end task show; input reg[3:0] decc; // 输入，无符号二进制数 output reg[6:0] out; // 输出，7位二进制数值 if(decc==0) out=7&#x27;b1000000; // 七段管显示0 else if(decc==1) out=7&#x27;b1111001; // 七段管显示1 else if(decc==2) out=7&#x27;b0100100; // 七段管显示2 else if(decc==3) out=7&#x27;b0110000; // 七段管显示3 else if(decc==4) out=7&#x27;b0011001; // 七段管显示4 else if(decc==5) out=7&#x27;b0010010; // 七段管显示5 else if(decc==6) out=7&#x27;b0000010; // 七段管显示6 else if(decc==7) out=7&#x27;b1111000; // 七段管显示7 else if(decc==8) out=7&#x27;b0000000; // 七段管显示8 else if(decc==9) out=7&#x27;b0011000; // 七段管显示9 else if(decc==10)out=7&#x27;b0111111; // 七段管显示- else out=7&#x27;b1111111; // 七段管不显示 endtaskendmodule 实现效果十进制显示 加法 乘法 减法 减法","categories":[],"tags":[],"author":"lzy"},{"title":"NodeMCU-ESP8266联网获取实时天气并使用lcd1602显示","slug":"20200913-NodeMCU-天气显示","date":"2020-09-13T06:26:09.000Z","updated":"2020-09-13T06:26:09.000Z","comments":true,"path":"2020/20200913-NodeMCU-天气显示/","permalink":"http://www.cvzoo.cn/2020/20200913-NodeMCU-%E5%A4%A9%E6%B0%94%E6%98%BE%E7%A4%BA/","excerpt":"","text":"实现效果 硬件准备 NodeMCU-ESP8266开发板 lcd1602显示屏（使用I2C总线） 杜邦线若干 可以联网的WiFi信号 软件环境 Arduino IDE 心知天气API（免费版够用） 连线：NodeMCU——I2C GPIO4——SDA GPIO5——SCL VIN——VCC GND——GND 这里这个连线还是很坑的。 供电之所以使用VIN而不使用3.3V，是因为VIN的供电是5V的，3.3V供电也不是不行，但是显示效果不太行，几乎看不清。 另外，之前网上看别人做lcd1602显示，都是连D3、D4两个脚，然后一直不管用，直到忍无可忍查了NodeMCU-ESP8266的管脚功能表，如下：（来源： https://tttapa.github.io/ ） GPIO Function State Restrictions 0 Boot mode select 3.3V No Hi-Z 1 TX0 - Not usable during Serial transmission 2 Boot mode select TX1 3.3V (boot only) Don’t connect to ground at boot time Sends debug data at boot time 3 RX0 - Not usable during Serial transmission 4 SDA (I²C) - - 5 SCL (I²C) - - 6 - 11 Flash connection x Not usable, and not broken out 12 MISO (SPI) - - 13 MOSI (SPI) - - 14 SCK (SPI) - - 15 SS (SPI) 0V Pull-up resistor not usable 16 Wake up from sleep - No pull-up resistor, but pull-down instead Should be connected to RST to wake up 开发过程开发之前先去心知天气注册一个账户 ，申请一个免费的API，用来获取实时天气。 引入最基本的ESP8266WiFi库，先连接一个能上网的WiFi，使用ESP8266通过http请求获取信息，几秒钟请求一次，更新信息。返回的是一个JSON字符串，使用ArduinoJson库函数解析JSON，得到需要的具体数据。最后通过LiquidCrystal_I2C库将天气情况显示在LCD1602上。 代码与库本项目： https://github.com/liuzengyun/esp8266_Weather ArduinoJSON库： https://github.com/bblanchon/ArduinoJson LiquidCrystal_I2C库：Arduino IDE中库管理中下载即可。","categories":[],"tags":[{"name":"ESP8266","slug":"ESP8266","permalink":"http://www.cvzoo.cn/tags/ESP8266/"}],"author":"lzy"},{"title":"SSM框架：导出数据库内容到Excel表格","slug":"20200820-SSM-EasyExcel","date":"2020-08-20T06:26:09.000Z","updated":"2020-08-20T06:26:09.000Z","comments":true,"path":"2020/20200820-SSM-EasyExcel/","permalink":"http://www.cvzoo.cn/2020/20200820-SSM-EasyExcel/","excerpt":"","text":"经常遇到一些网站，尤其是管理员后台，有一个导出数据的功能。 在做暑期作业的时候，正需要这个功能，想起了之前用过的POI，查了一些资料发现POI吃内存比较严重，正好国内阿里改进了POI，形成了EasyExcel，并且已经开源。 官方说明文档 https://www.yuque.com/easyexcel/doc/easyexcel 功能预览前端通过按钮，向后端接口发送post请求，实现文件下载。 接口实现导入Maven依赖1234567891011&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;easyexcel&lt;/artifactId&gt; &lt;version&gt;2.2.6&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.projectlombok &lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;1.18.12&lt;/version&gt;&lt;/dependency&gt; Mapper.xml1234&lt;select id=&quot;selectAll&quot; resultMap=&quot;BaseResultMap&quot;&gt; select * from uusers&lt;/select&gt; Mapper接口声明123public interface UusersMapper &#123; List&lt;Uusers&gt; selectAll();&#125; Uusers表实体类继承自com.alibaba.excel.metadata.BaseRowModel类，每个属性前添加@ExcelProperty注解，声明导出Excel的表头。 1234567891011121314151617181920212223242526272829public class Uusers extends BaseRowModel &#123; @ExcelProperty(value = &quot;id&quot;,index = 0 ) private Integer id; @ExcelProperty(value = &quot;用户名&quot;,index = 1 ) private String username; @ExcelProperty(value = &quot;密码&quot;,index = 2 ) private String password; @ExcelProperty(value = &quot;身份&quot;,index = 3 ) private String identity; @ExcelProperty(value = &quot;手机号&quot;,index = 4 ) private String phone; @ExcelProperty(value = &quot;性别&quot;,index = 5 ) private String gender; @ExcelProperty(value = &quot;姓名&quot;,index = 6 ) private String name; @ExcelProperty(value = &quot;年龄&quot;,index = 7 ) private Integer age; @ExcelProperty(value = &quot;邮箱&quot;,index = 8 ) private String email;&#125; Service层123456@Autowiredprivate UusersMapper uusersMapper;@Overridepublic List&lt;Uusers&gt; getAll() &#123; return uusersMapper.selectAll();&#125; Controller层123456789101112131415161718192021@RequestMapping(&quot;/downloadUsers&quot;)@ResponseBodypublic void downloadUsers(HttpServletResponse response) throws Exception &#123; List&lt;Uusers&gt; list = uusersService.getAll(); ServletOutputStream out = response.getOutputStream(); ExcelWriter writer = new ExcelWriter(out, ExcelTypeEnum.XLSX, true); String fileName = &quot;用户信息表&quot;; Sheet sheet = new Sheet(1, 0,Uusers.class); //设置自适应宽度 sheet.setAutoWidth(Boolean.TRUE); // 第一个 sheet 名称 sheet.setSheetName(&quot;用户信息&quot;); writer.write(list, sheet); //通知浏览器以附件的形式下载处理，设置返回头要注意文件名有中文 response.setHeader(&quot;Content-disposition&quot;, &quot;attachment;filename=&quot; + new String( fileName.getBytes(&quot;gb2312&quot;), &quot;ISO8859-1&quot; ) + &quot;.xlsx&quot;); writer.finish(); response.setContentType(&quot;multipart/form-data&quot;); response.setCharacterEncoding(&quot;utf-8&quot;); out.flush(); out.close();&#125;","categories":[],"tags":[{"name":"SSM","slug":"SSM","permalink":"http://www.cvzoo.cn/tags/SSM/"},{"name":"EasyExcel","slug":"EasyExcel","permalink":"http://www.cvzoo.cn/tags/EasyExcel/"}],"author":"lzy"},{"title":"我要这差分放大电路有何用？","slug":"差分放大电路","date":"2020-03-22T16:08:24.000Z","updated":"2024-12-14T15:26:46.267Z","comments":true,"path":"2020/差分放大电路/","permalink":"http://www.cvzoo.cn/2020/%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/","excerpt":"","text":"从上一周开始，模电的学习迈进了差分放大电路的大门。模电本来就是一门我没怎么听懂的课程，连续学习几节课后，眼看着差分放大电路快要讲完了，笔记也做了不少，但总感觉没理解其中的道理。 所以今天先把进度停下来，查点资料，想一想为什么要引入差分放大电路这个东西，或者说是我们怎么一步一步从普通的晶体管放大电路转换到差分放大电路的。也算是理顺一下自己的学习思路，不至于越学越迷糊。 从普通的放大电路说起在第二章设计普通的晶体管放大电路时，以共射放大为例，我们遇到了一个问题：静态工作点Q不稳定，导致交流信号无输入时，输出端出现“零点漂移”现象。 “在温度变化、三极管老化、电源电压波动等外部因素的影响下，将引起静态工作点的变动，严重时将使放大电路不能正常工作，其中影响最大的是温度的变化。” 我们把上述温度引起的零点漂移称为”温漂”，既然它的影响最大，那么我们接下来的工作主要聚焦于“如何抑制温漂”好了。 对于稳定工作点的技术，可以从元件、环境、电路改进方面入手，比如采取恒温措施、选择温度性能好的元件等，但是这里我们主要是介绍引入RE电阻进行负反馈调节的方法（因为我主要想说差分放大电路）。 这里就必须要搞明白温度变化是如何影响Q的。Q的变化主要得因于温度变化引起了IC的变化，其实这归根结底是因为温度变化对ICBO、UBE、β产生了影响，结果如下图。（具体是如何影响的，那就涉及晶体管原理了） 说到这里，其实我们的目标就已经很明确了，那就是尽量抑制温度变化引起的IC变化，从而保证静态工作点Q的稳定。 好了，RE可以出来了！ 如上图，在晶体管的发射极加一个电阻RE，当IC变大时，RE上的压降也会变大，也就提高了发射极电位UE，由于分压偏置，基极电位UB几乎不变，所以UBE会大幅度下降，从而使IB下降，那么IC&#x3D;βIB也自然会下降。如此一来，由于RE的负反馈调节作用，本来的IC变化又被拉回来了。 由此看来，RE的阻值仿佛越大越好，因为RE越大其对IC的负反馈调节越强，即抑制变化的作用越明显。但是，RE存在也造成了UCE的减小，那么在放大小信号的过程中，电路的动态范围会因此变窄（非线性失真）；再者，RE如果太大，那么功耗也是一个不得不考虑的问题了。所以，RE的阻值应该适当选取。 静态情况下舒服了，那么动态呢？以上讨论的是在静态分析过程中如何维持Q点稳定，方法是我们引进了发射极电阻RE。但是在动态分析过程中，RE暴露出了致命性的缺点，它会使得整个电路的放大性能降低（放大倍数减小）。 有问题总会有解决方法（这是个哲学问题，有时间拿出来单独说说！）。解决这个问题的方法是，我们给RE并联了一个旁路电容CE，这样在动态分析画出交流通路时，我们神奇的发现，RE被CE短路掉了，动态下电路又回到了原始的样子。 如此，既在静态下引入RE稳定了工作点，又不会因为RE的存在导致动态性能下降，真是可谓XXXX（想了几分钟没想出个合适的词，用“牛逼”又显得不太严谨）。 轮到多级放大电路了多级放大电路同样也存在Q点不稳定导致的零点漂移现象，而且这里的零点漂移更致命了，因为后级还会把前级的漂移继续放大，这样下去那还了得？ 多级放大电路中最常见的当属直接耦合的方式了。 当然了，问题也总会在我们猝不及防的时候出现（这也是个哲学问题，有时间一并探讨）。因为多级放大电路的集成化要求高，这里如果引入大个头的旁路电容CE来解决RE存在的缺点，显然不是一个聪明的选择；二来即使引入RE也还会存在Q点的微小波动，但是在多级放大电路中这种微小的波动也会被不断地放大。 到这里，我们再提出一个想法来消除零点漂移。试想，如果我们在输出端加一个电源，要求这个电源产生和原电路零点波动相同的电压，那么用原来的输出和此电源作差之后的结果作为输出，不就只保留了放大之后的小信号了嘛。 问题来了，这种电源怎么找呢？我们干脆也用一个相同的晶体管吧，与原来的晶体管呈镜像关系，毕竟相同的环境下零点就算是漂移也会漂得一个样，那么两个输出作差总会把漂移消除掉吧。我们给这样一种电路取个高大上的名字，就叫差分放大电路吧。 但是这样两个管子本身的零漂并没有得到抑制，两侧在大信号范围内作到完全抵消很困难。那就再加上RE抑制一下呗，这里原理和单管放大时一样。 （这里略去引入负电源-VE的过程，只抄一段笔记吧！） 负电源的作用：（1）补偿Re上的直流压降，保证信号动态工作范围。（2）保证差分管导通，可以输出正负两个方向的信号。（3）为Ia1、Ia提供偏置电流。 很明显又绕回来了，本来就是为了不引进CE而放弃了RE，但是这里又加进来了RE。仔细观察，神奇的事情出现了，动态下在两侧输入共模信号时，iRE&#x3D;2iE，RE的负反馈作用出现了双倍的效果，降低了共模输入下放大倍数；而两侧差模输入时，由于iE1&#x3D;-iE2，RE上不会有电流经过，当然也不会有压降了，那肯定也没有负反馈作用了。 很明显，在这个电路中：1.抑制了零点漂移；2.抑制了共模信号；3.放大了差模信号；4.提高了电路共模抑制比。 对于差分放大电路的引入过程，到这里也算是挺清楚了。至于差分放大电路的接法和进一步改进，那都是后话了。","categories":[],"tags":[{"name":"差分放大电路","slug":"差分放大电路","permalink":"http://www.cvzoo.cn/tags/%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/"},{"name":"模电","slug":"模电","permalink":"http://www.cvzoo.cn/tags/%E6%A8%A1%E7%94%B5/"}],"author":"lzy"},{"title":"Hello World","slug":"hello-world","date":"2017-08-31T16:00:00.000Z","updated":"2024-12-13T03:16:54.624Z","comments":true,"path":"2017/hello-world/","permalink":"http://www.cvzoo.cn/2017/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"author":"lzy"}],"categories":[],"tags":[{"name":"ESP8266","slug":"ESP8266","permalink":"http://www.cvzoo.cn/tags/ESP8266/"},{"name":"SSM","slug":"SSM","permalink":"http://www.cvzoo.cn/tags/SSM/"},{"name":"EasyExcel","slug":"EasyExcel","permalink":"http://www.cvzoo.cn/tags/EasyExcel/"},{"name":"差分放大电路","slug":"差分放大电路","permalink":"http://www.cvzoo.cn/tags/%E5%B7%AE%E5%88%86%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/"},{"name":"模电","slug":"模电","permalink":"http://www.cvzoo.cn/tags/%E6%A8%A1%E7%94%B5/"}]}